{"version":3,"sources":["webpack:///./src/views/FAQ.vue?6581","webpack:///src/views/FAQ.vue","webpack:///./src/views/FAQ.vue?440c","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///./src/views/FAQ.vue","webpack:///./src/controllers/Faq.controller.js"],"names":["_vm","this","_h","$createElement","_c","_self","attrs","_v","_l","item","key","_id","staticClass","_s","pregunta","respuesta","staticRenderFns","data","preguntas","created","mixins","name","props","disabled","readonly","Boolean","content","header","nextIsActive","computed","classes","groupClasses","isDisabled","expansionPanels","isReadonly","methods","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","onClick","e","toggle","render","h","class","String","baseMixins","isActive","parentIsActive","expansionPanel","watch","immediate","handler","isBooted","oldVal","$nextTick","beforeDestroy","showLazyContent","directives","value","ripple","disableIconRotate","expandIcon","type","default","hideActions","hasMousedown","genIcon","icon","VIcon","setBackgroundColor","tabindex","on","click","mousedown","mouseup","open","provide","accordion","flat","hover","focusable","inset","popout","tile","$attrs","hasOwnProperty","Array","length","updateItem","getValue","nextValue","index","toggleMethod","component","VContainer","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","END_POINT","getAllFaq","httpClient","get","createFaq","faq","post","updateFaq","id","put","deleteFaq","delete"],"mappings":"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","file":"js/chunk-b2ed33da.2a1960ee.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\"}},[_c('h1',[_vm._v(\" Preguntas frecuentes \")]),_vm._l((_vm.preguntas),function(item){return _c('v-expansion-panels',{key:item._id,staticClass:\"mb-6\"},[_c('v-expansion-panel',[_c('v-expansion-panel-header',{attrs:{\"expand-icon\":\"mdi-menu-down\"}},[_c('h3',[_vm._v(\" \"+_vm._s(item.pregunta)+\" \")])]),_c('v-expansion-panel-content',[_vm._v(\" \"+_vm._s(item.respuesta)+\" \")])],1)],1)})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container fluid>\r\n    <h1>\r\n      Preguntas frecuentes \r\n    </h1>\r\n\r\n    <v-expansion-panels class=\"mb-6\" v-for=\"item in preguntas\" :key=\"item._id\">\r\n\r\n        <v-expansion-panel>\r\n        <v-expansion-panel-header expand-icon=\"mdi-menu-down\">\r\n          <h3>\r\n            {{item.pregunta}}\r\n          </h3>\r\n        </v-expansion-panel-header>\r\n        <v-expansion-panel-content>\r\n           {{item.respuesta}}\r\n        </v-expansion-panel-content>\r\n\r\n      </v-expansion-panel>\r\n\r\n      <!-- <v-expansion-panel>\r\n        <v-expansion-panel-header expand-icon=\"mdi-menu-down\">\r\n          <h3>\r\n            1. ¿Qué tipos de licencia de conducción son válidos para alquilar un automóvil en\r\n            MINTICAR?\r\n          </h3>\r\n        </v-expansion-panel-header>\r\n        <v-expansion-panel-content>\r\n          Una licencia de conducir colombiana será requerida, mínimo categoría\r\n          B2. Las licencias de conducir provisionales (o de aprendizaje) no son\r\n          aceptadas para el alquiler. <br />Para el caso de ciudadanos\r\n          extranjeros, los requisitos dependerán del país de donde el visitante\r\n          provenga. <br />En cualquier caso, cualquier persona que se encuentre\r\n          en el territorio nacional colombiano por un término superior a seis\r\n          meses, deberá contar con una licencia de conducir expedida en Colombia\r\n          por un organismo de tránsito competente.\r\n        </v-expansion-panel-content>\r\n      </v-expansion-panel> -->\r\n\r\n   </v-expansion-panels>\r\n     \r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport {getAllFaq } from \"../controllers/Faq.controller\"; // cargar de la biblioteca la función necesaria para pedir algo al backend.\r\nexport default {\r\n  data() {\r\n    return  {\r\n      preguntas: [\r\n        // { \r\n        // pregunta:\"pregunta1\",\r\n        // descripcion:\"respuesta1\"\r\n        // } ,\r\n        //  { \r\n        // pregunta:\"pregunta2\",\r\n        // descripcion:\"respuesta2\"\r\n        // } ,\r\n       \r\n      ]\r\n     \r\n    }\r\n  }  ,\r\n\r\n\r\n  // cargar datos de la base de datos(MongoDb)\r\n  created() {\r\n    getAllFaq () // llamar a la función\r\n      .then((response) => {\r\n\r\n        this.preguntas = response.data;\r\n      })\r\n      .catch((err) => console.error(err)); //manejar errores\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FAQ.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FAQ.vue?vue&type=script&lang=js&\"","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  computed: {\n    parentIsActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  watch: {\n    parentIsActive: {\n      immediate: true,\n      handler (val, oldVal) {\n        if (val) this.isBooted = true\n\n        if (oldVal == null) this.isActive = val\n        else this.$nextTick(() => this.isActive = val)\n      },\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./FAQ.vue?vue&type=template&id=67ac12e4&\"\nimport script from \"./FAQ.vue?vue&type=script&lang=js&\"\nexport * from \"./FAQ.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\ninstallComponents(component, {VContainer,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels})\n","/* aquí van las funciones que deben ejecutarse parse\r\n conectarse al backend( servidor con puerto elegido) */\r\n\r\nimport httpClient from \"./httpClients\"; // importar biblioteca que genera un cliente para conectarse al servidor por el puerto elegido(3000 en este caso)\r\n\r\nconst END_POINT = \"/api/faq\";   // ruta de petición al servidor\r\n\r\nconst getAllFaq = () => httpClient.get(END_POINT); // petición GET al servidor con la ruta elegida.\r\n\r\nconst createFaq = (faq) => httpClient.post(END_POINT,faq); // petición para agregar una faq\r\n\r\nconst getFaq  = (id) =>  httpClient.get(END_POINT+\"/\"+id); // consultar una sola faq\r\n\r\nconst updateFaq  = (id,faq) => httpClient.put(END_POINT+'/'+id, faq)  //actualizar una faq\r\n\r\nconst deleteFaq  = (id) => httpClient.delete(END_POINT+\"/\"+id)  //borrar una faq\r\n\r\n\r\nexport {\r\n    getAllFaq,\r\n    createFaq,\r\n    getFaq ,\r\n    updateFaq,\r\n    deleteFaq\r\n}\r\n"],"sourceRoot":""}